@use "sass:string";

@function to-number($value) {
    @if type-of($value) == 'number' {
      @return $value;
    } @else if type-of($value) != 'string' {
      $_: log('Value for `to-number` should be a number or a string.');
    }

    $result: 0;
    $digits: 0;
    $minus: str-slice($value, 1, 1) == '-';
    $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);

    @for $i from if($minus, 2, 1) through str-length($value) {
      $character: str-slice($value, $i, $i);

      @if not (index(map-keys($numbers), $character) or $character == '.') {
        @return to-length(if($minus, -$result, $result), str-slice($value, $i))
      }

      @if $character == '.' {
        $digits: 1;
      } @else if $digits == 0 {
        $result: $result * 10 + map-get($numbers, $character);
      } @else {
        $digits: $digits * 10;
        $result: $result + map-get($numbers, $character) / $digits;
      }
    }

    @return if($minus, -$result, $result);;
  }

@function convert-to-rgb($color) {
  $channels: string.split($color, ",");
  @return rgb(to-number(nth($channels, 1)),to-number(nth($channels, 2)),to-number(nth($channels, 3)));
}


$wml-carousel-white: "255,255,255";
$wml-carousel-black: "0,0,0";
$wml-carousel-primary: "144,238,144";
$wml-carousel-secondary:"112,112,112";

$wml-carousel-primary-gradient:   radial-gradient(farthest-corner at 100% 0px,convert-to-rgb($wml-carousel-primary) 0%,convert-to-rgb($wml-carousel-secondary) 150%);
$wml-carousel-secondary-gradient: radial-gradient(farthest-corner at 100% 0px,grey 0%,convert-to-rgb($wml-carousel-black) 150%);


:root{
  --wml-carousel-white:#{$wml-carousel-white};
  --wml-carousel-black:#{$wml-carousel-black};
  --wml-carousel-primary:#{$wml-carousel-primary};
  --wml-carousel-secondary:#{$wml-carousel-secondary};

  --wml-carousel-primary-gradient: #{$wml-carousel-primary-gradient};
  --wml-carousel-secondary-gradient: #{$wml-carousel-secondary-gradient};

}
