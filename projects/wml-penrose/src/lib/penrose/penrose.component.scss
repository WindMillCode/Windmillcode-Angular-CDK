@use "sass:math";

*, *::before, *::after {
    padding: 0;
    margin: 0 auto;
    box-sizing: border-box;
}

:host{
  width: calc(225/16 * 1rem);
  height: calc(225/16 * 1rem);
  display: flex;
  justify-content: center;
  align-items: center;

}

$speed: 20s;

.penrose {
    position: relative;
    margin: 0 0 0 0;
}

.triangle {
    position: absolute;

    &:nth-child(-n + 3) {
        width: calc((146)/16 * 1rem);
        height: calc((36)/16 * 1rem);
        transform: translate(-50%, -50%) rotate(var(--aAngle)) translateX(calc((31.4)/16 * 1rem)) translateY(calc((36)/16 * 1rem)) skewX(-30deg);
        background-image: linear-gradient(to right, #000a, #0000 50%);
        animation: triangleZ1 $speed infinite step-end;

        @keyframes triangleZ1 {
            0%, 85% {
                z-index: 2;
            }
            25% {
                z-index: -2;
            }
        }
    }

    &:nth-child(n + 4) {
        width: calc((50)/16 * 1rem);
        height: calc((205)/16 * 1rem);
        transform: translate(-50%, -50%) rotate(var(--aAngle)) translateX(calc((59.2)/16 * 1rem)) translateY(calc((-48.5)/16 * 1rem)) skewX(30deg);
        background-image: linear-gradient(#000a, #0000 50%);
        animation: triangleZ2 $speed infinite step-end;

        @keyframes triangleZ2 {
            0%, 50% {
                z-index: 2;
            }
            33.333% {
                z-index: -2;
            }
        }
    }

    &:nth-child(3n) {
        background-color: hsl(40, 75%, 50%);
        --aAngle: 0;
        animation-delay: math.div($speed * -1, 3);
    }
    &:nth-child(3n + 1) {
        background-color: hsl(40, 75%, 20%);
        --aAngle: 120deg;
        animation-delay: math.div($speed * -0, 3);
    }
    &:nth-child(3n + 2) {
        background-color: hsl(40, 75%, 40%);
        --aAngle: 240deg;
        animation-delay: math.div($speed * -2, 3);
    }
}

.ball {
  position: absolute;
  width: calc(30/16 * 1rem); height: calc(30/16 * 1rem);
  animation: ball $speed infinite ease-in-out;

  @keyframes ball {
    0%, 100% { transform: translate(-50%, -50%) translateX(0) translateY(calc(-171/16 * 1rem)); }
    8.333% { transform: translate(-50%, -50%) translateX(calc(110/16 * 1rem)) translateY(calc(20/16 * 1rem)); }
    16.666% { transform: translate(-50%, -50%) translateX(calc(-30/16 * 1rem)) translateY(calc(20/16 * 1rem)); }
    25% { transform: translate(-50%, -50%) translateX(calc(35/16 * 1rem)) translateY(calc(-125/16 * 1rem)); }
    33.333% { transform: translate(-50%, -50%) translateX(calc(148/16 * 1rem)) translateY(calc(90/16 * 1rem)); }
    41.666% { transform: translate(-50%, -50%) translateX(calc(-80/16 * 1rem)) translateY(calc(90/16 * 1rem)); }
    50% { transform: translate(-50%, -50%) translateX(0) translateY(calc(-50/16 * 1rem)); }
    58.333% { transform: translate(-50%, -50%) translateX(calc(110/16 * 1rem)) translateY(calc(90/16 * 1rem)); }
    66.666% { transform: translate(-50%, -50%) translateX(calc(-148/16 * 1rem)) translateY(calc(90/16 * 1rem)); }
    75% { transform: translate(-50%, -50%) translateX(calc(-25/16 * 1rem)) translateY(calc(-115/16 * 1rem)); }
    83.333% { transform: translate(-50%, -50%) translateX(calc(50/16 * 1rem)) translateY(calc(12/16 * 1rem)); }
    91.666% { transform: translate(-50%, -50%) translateX(calc(-110/16 * 1rem)) translateY(calc(12/16 * 1rem)); }
  }

  &::before {
    content: '';
    position: absolute;
    top: calc(-50/16 * 1rem); left: calc(-100/16 * 1rem);
    width: calc(300/16 * 1rem); height: calc(200/16 * 1rem);
    background-image: radial-gradient(#0005, #0000 50%);
    animation: shadowDir $speed infinite step-end;

    @keyframes shadowDir {
      0%      { transform: rotate(0deg) skewX(30deg); }
      33.333% { transform: rotate(120deg) skewX(30deg); }
      66.666% { transform: rotate(60deg) skewX(30deg); }
    }
  }

  &::after {
    content: '';
    position: absolute;
    width: 100%; height: 100%;
    border-radius: 50%;
    background-image: radial-gradient(circle at top, lightblue, #000 100%);
  }
}
